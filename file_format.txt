--מבנה כל קובץ מסוג pacman_*.steps:--
(1) השורה הראשונה מכילה מחרוזת של true או false, ומשמעותה האם המסך עם צבעים או לא.
(2) החל מהשורה הראשונה ועד אחת לפני האחרונה (סיום המסך; השורה האחרונה הינה שורה ריקה ""), כל שורה תכיל את התזוזה Entity::getDirection() של כל ה-Entities. כלומר, החל מאיטרטור 0 ועד איטרטור 4. התזוזות מופיעות אך ורק בהתאם לתדירות התזוזה של ה-Entity. פקמן זז כל איטרציה - לכן ה-direction שלו יופיע כל שורה, רוח זזה כל 2 איטרציות - לכן ה-direction שלה יופיע כל 2 שורות, וכן הלאה...
בשורות אלו יופיעו גם הנתונים הבאים של ה-Fruit (כל 4 איטרציות תזוזה): ה-direction של ה-Fruit, ההופעה שלו (fruit.getVisibility()), הספרה שלו, והמיקום שלו (ערך ה-x של המיקום שלו ולאחר מכן ערך ה-y של המיקום שלו).
במידה וה-fruit מת, ערכים אלו יהיו -1, false, לאחר מכן 0, 0, 0 (בהתאמה). 
* סדר הופעת כלל המספרים הינו לפי המתואר לעיל.
שראל כהן מאשר את עניין המיקום והספרה של ה-Fruit כאן: https://mama.mta.ac.il/mod/forum/discuss.php?d=5819

--מבנה כל קובץ מסוג pacman_*.result:--
(1) השורה הראשונה תכיל מונים Points of time, שמשמעותם כמה איטרציות של צעדים החל מתחילת המסך בוצעו עד שפקמן מת (מספר המונים משתנה מ-0 ל-3). במידה והפקמן כלל לא נאכל במסך, השורה תהיה מחרוזת ריקה ("").
(2) השורה השנייה תכיל מונה Point of time, שמשמעותו כמה איטרציות של צעדים החל מתחילת המסך בוצעו עד שהמסך הסתיים. 
* סיום מסך, משמעותו - השחקן סיים את המסך בהצלחה, או שהשחקן הפסיד.

הערות נוספות:
(1) בין כל השורות קיימת ירידת שורה באמצעות '\n'.
(2) כל פריט מידע מיוצג על ידי מחרוזת שמייצגת מספר שלם.
(3) כל מחרוזת היא אוסף של תתי מחרוזות שמייצגות מספרים שלמים ומופרדות על-ידי רווח (" ").
(4) מספר השורות בקובץ מסוג pacman_*.steps הוא כגודל המונה Point of time (לא קבוע) + שורה ריקה ("").
(5) מספר השורות בקובץ מסוג pacman_*.result הוא 2 (קבוע).